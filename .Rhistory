saveRDS(primary_wide, file = file.path(pathway, "/Code/RDS/puma_primary_wide.rds"))
# Turn secondary dataset into wide dataset
puma_all <- as.data.frame(puma_all) #must be just data.frame for next step to work
secondary_long <- puma_all %>% select(ptid, group_new, visit, detect_tfv, ut_result, hair2_coded, hair2code,
wilson_adh, wilson_adh_scaled_sd, padh4, padh7,
ppoz_coded, marital, income, travel_coded,
incsource_coded, edu, emp_coded,mh14, sex1,
prep_length,condomless_sex, sex14, age)
secondary_wide <- reshape(secondary_long, idvar = c("ptid", "group_new"), timevar = "visit", direction = "wide")
# Remove variables not needed at all timeframes
secondary_wide <- secondary_wide %>% select(- c(prep_length.2, prep_length.3, prep_length.4, prep_length.5,
marital.2, marital.3, marital.4, marital.5, sex1.2,
sex1.3, sex1.4, sex1.5, age.2, age.3, age.4, age.5, edu.2, edu.3, edu.4,
edu.5, ppoz_coded.2, ppoz_coded.3, ppoz_coded.4, ppoz_coded.5,
incsource_coded.2, incsource_coded.3, incsource_coded.4, incsource_coded.5,
sex1.2, sex1.3, sex1.4, sex1.5, prep_length.2, prep_length.3, prep_length.4,
prep_length.5))
# EXPORT
##csv
write.csv(secondary_wide, file.path(pathway, "/Code/CSVs/PUMA_secondary_wide.csv"))
##RDS
saveRDS(secondary_wide, file = file.path(pathway, "/Code/RDS/puma_secondary_wide.rds"))
# EXPORT
##csv
write.csv(secondary_long, file.path(pathway, "/Code/CSVs/PUMA_secondary_long.csv"))
##RDS
saveRDS(secondary_long, file = file.path(pathway, "/Code/RDS/puma_secondary_long.rds"))
knitr::opts_chunk$set(echo = TRUE)
#load packages
library(dplyr)
library(flextable)
library(ggplot2)
library(collapse)
library(labelled)
library(compareGroups)
library(gee)
library(geepack)
library(pROC)
library(ROCR)
library(plotROC)
library(gridExtra)
library(kableExtra)
library(ggalluvial)
pathway <- "~/Library/CloudStorage/Box-Box/Puma Analysis/Analysis/Code"
month12 <- readRDS(file.path(pathway, "/RDS/puma_month12.rds"))
puma_all <- readRDS(file.path(pathway, "/RDS/puma_long_clean.rds"))
secondary_long <- readRDS(file.path(pathway, "/RDS/puma_secondary_long.rds"))
output_path <- "~/Library/CloudStorage/Box-Box/Puma Analysis/Analysis/Code/Output"
source("analysis_utilities.R")
# Create dataframes for the GEE models section
## Hair
hair_gee_data <- prepare_gee_data(
puma_all,
outcome = "detect_tfv",
predictors = c("wilson_adh_scaled_sd", "group_new"),
additional_vars = c("wilson_adh10", "wilson_adh", "hair3numeric", "hair2_coded",
"emp_coded", "age", "edu")
)
## Urine
ut_gee_data <- prepare_gee_data(
puma_all,
outcome = "ut_result",
predictors = c("wilson_adh_scaled_sd", "group_new"),
additional_vars = c("wilson_adh", "wilson_adh10", "emp_coded", "age", "edu")
)
## Continuous hair
continuous_data <- prepare_gee_data(
puma_all,
outcome = "tfvngml",
predictors = c("wilson_adh_scaled_sd", "group_new"),
additional_vars = c("wilson_adh", "wilson_adh10", "ptid", "visit", "detect_tfv")
)
## POC all
poc_all <- prepare_gee_data(
puma_all,
outcome = "ut_result",
predictors = c("wilson_adh_scaled_sd", "group_new"),
additional_vars = c("wilson_adh", "wilson_adh10", "ptid", "visit", "detect_tfv")
)
poc_all <- poc_all %>% filter(group_new == "Intervention")
## SOC all
soc_all <- prepare_gee_data(
puma_all,
outcome = "ut_result",
predictors = c("wilson_adh_scaled_sd", "group_new"),
additional_vars = c("wilson_adh", "wilson_adh10", "ptid", "visit", "detect_tfv")
)
soc_all <- soc_all %>% filter(group_new == "Standard of Care")
hair_sd_results <- run_gee_model(
hair_gee_data,
outcome = "detect_tfv",
predictors = c("wilson_adh_scaled_sd", "group_new")
)
flextable(hair_sd_results)
hair_results <- run_gee_model(
hair_gee_data,
outcome = "detect_tfv",
predictors = c("wilson_adh", "group_new")
)
flextable(hair_results)
hair_10_results <- run_gee_model(
hair_gee_data,
outcome = "detect_tfv",
predictors = c("wilson_adh10", "group_new")
)
flextable(hair_10_results)
# Association between adherence and continuous hair levels
# Linear regression with a GEE model
# Association between adherence and continuous hair levels
hair_cont_results <- run_gee_continuous_model(
continuous_data,
outcome = "tfvngml",
predictors = c("wilson_adh_scaled_sd", "group_new")
)
flextable(hair_cont_results)
hair_3cat_results <- run_gee_model(
hair_gee_data,
outcome = "hair3numeric",
predictors = c("wilson_adh_scaled_sd", "group_new")
)
flextable(hair_3cat_results)
hair_2cat_results <- run_gee_model(
hair_gee_data,
outcome = "hair2_coded",
predictors = c("wilson_adh_scaled_sd", "group_new")
)
flextable(hair_2cat_results)
# Urine model with scaled_sd
ut_sd_results <- run_gee_model(
ut_gee_data,
outcome = "ut_result",
predictors = c("wilson_adh_scaled_sd", "group_new")
)
flextable(ut_sd_results)
urine_results <- run_gee_model(
ut_gee_data,
outcome = "ut_result",
predictors = c("wilson_adh", "group_new")
)
flextable(urine_results)
ut_10_results <- run_gee_model(
ut_gee_data,
outcome = "ut_result",
predictors = c("wilson_adh10", "group_new")
)
flextable(ut_10_results)
# List of predictor variables selected a priori
predictors <- c("wilson_adh", "wilson_adh_scaled_sd", "padh4", "padh7",
"ppoz_coded", "marital", "income", "travel_coded",
"incsource_coded", "edu", "emp_coded", "mh14", "sex1",
"prep_length", "condomless_sex", "sex14", "age")
# List of outcome variables
outcomes <- c("ut_result", "hair2_coded")
# Run univariable analysis
univariable_results <- run_univariable_analysis(
data = secondary_long,
predictors = predictors,
outcomes = outcomes
)
# Get summary of significant predictors
significant_predictors <- summarize_univariable_results(univariable_results)
# Display the full results table
print(univariable_results)
## Associated univariable with ut:
### emp_coded, age
## Associated univariable with detect_tfv
### edu
View(univariable_results)
edu_results <- run_gee_model(
secondary_long,
outcome = "hair2_coded",
predictors = c("edu")
)
flextable(edu_results)
age_results_h <- run_gee_model(
secondary_long,
outcome = "hair2_coded",
predictors = c("age")
)
flextable(age_results_h)
age_edu_model_hr <- geeglm(hair2_coded ~ group_new + wilson_adh_scaled_sd + edu + age,
id = ptid,
family = poisson(link = "log"),
corstr = "exchangeable",
data = hr_multivar)
forward_selection_vars <- c("edu", "emp_coded", "age", "hair2_coded", "ut_result",
"group_new", "wilson_adh_scaled_sd", "ptid")
multivar_data <- secondary_long[forward_selection_vars]
### Urine Assay
# Remove NAs
multivar_data <-multivar_data[complete.cases(multivar_data),]
ut_multivar <- multivar_data %>% select(-hair2_coded)
multivar_data <-multivar_data[complete.cases(multivar_data),]
hr_multivar <- multivar_data %>% select(-ut_result)
# Add in edu
edu_model_hr <- geeglm(hair2_coded ~ group_new + wilson_adh_scaled_sd + edu,
id = ptid,
family = poisson(link = "log"),
corstr = "exchangeable",
data = hr_multivar)
# QIC is lower than just Wilson ADH
QIC(edu_model_hr)
# Add in age
age_edu_model_hr <- geeglm(hair2_coded ~ group_new + wilson_adh_scaled_sd + edu + age,
id = ptid,
family = poisson(link = "log"),
corstr = "exchangeable",
data = hr_multivar)
# QIC is lower than just Wilson ADH
QIC(age_edu_model_hr)
QIC(edu_model_hr)
QIC(edu_model2_hr)
QIC(age_edu_model_hr)
QIC(edu_model_hr)
full_m_hr <- run_gee_model(
secondary_long,
outcome = "hair2_coded",
predictors = c("group_new", "wilson_adh_scaled_sd", "edu")
)
flextable(full_m_hr)
wilson_model_hr <- geeglm(hair2_coded ~ group_new + wilson_adh_scaled_sd,
id = ptid,
family = poisson(link = "log"),
corstr = "exchangeable",
data = hr_multivar)
QIC(wilson_model_hr)
QIC(edu_model_hr)
m_hair <- run_gee_model(
secondary_long,
outcome = "hair2_coded",
predictors = c("group_new", "wilson_adh_scaled_sd", "edu", "age")
)
flextable(m_hair)
mhair_glm <- geeglm(hair2_coded ~ group_new + edu + age + wilson_adh_scaled_sd,
id = ptid,
family = poisson(link = "log"),
corstr = "exchangeable",
data = hr_multivar)
QIC(mhair_glm)
knitr::opts_chunk$set(echo = TRUE)
#load packages
library(dplyr)
library(flextable)
library(ggplot2)
library(collapse)
library(labelled)
library(compareGroups)
library(gee)
library(geepack)
library(pROC)
library(ROCR)
library(plotROC)
library(gridExtra)
library(kableExtra)
library(ggalluvial)
pathway <- "~/Library/CloudStorage/Box-Box/Puma Analysis/Analysis/Code"
month12 <- readRDS(file.path(pathway, "/RDS/puma_month12.rds"))
puma_all <- readRDS(file.path(pathway, "/RDS/puma_long_clean.rds"))
secondary_long <- readRDS(file.path(pathway, "/RDS/puma_secondary_long.rds"))
output_path <- "~/Library/CloudStorage/Box-Box/Puma Analysis/Analysis/Code/Output"
# Wilson score line graph
line_graph_df <- puma_all %>% dplyr::select(ptid, group_new, wilson_adh, visit)
means_line_graph <- line_graph_df %>% group_by(visit, group_new) %>%
summarise(mean_score = mean(wilson_adh, na.rm = TRUE),
sd_score = sd(wilson_adh, na.rm = TRUE)) %>%
ungroup()
means_line_graph_t <- line_graph_df %>% group_by(visit) %>%
summarise(mean_score = mean(wilson_adh, na.rm = TRUE),
sd_score = sd(wilson_adh, na.rm = TRUE)) %>%
ungroup()
## Total sample
# Create labels with mean and sd
means_line_graph_t$label <- sprintf("%.1f\n(SD: %.1f)", means_line_graph_t$mean_score, means_line_graph_t$sd_score)
# Add a small offset to position labels slightly above the points
means_line_graph_t$label_y <- means_line_graph_t$mean_score + 2
ggplot(means_line_graph_t, aes(x = visit, y = mean_score)) +
geom_line(size = 1) +
geom_point(size = 3) +
geom_text(
aes(y = label_y, label = label),
size = 3,
vjust = "bottom"
) +
scale_x_continuous(breaks = 1:5) +
labs(
title = "Mean Adherence Score by Visit",
x = "Visit",
y = "Mean Wilson Adherence Score"
) +
theme_minimal() +
theme(
legend.position = "top",
legend.title = element_blank()
) +
coord_cartesian(ylim = c(70, 95))
# Create labels with mean and sd
means_line_graph$label <- sprintf("%.1f\n(SD: %.1f)", means_line_graph$mean_score, means_line_graph$sd_score)
# Add a small offset to position labels slightly above the points
means_line_graph$label_y <- ifelse(means_line_graph$group_new == "Intervention",
means_line_graph$mean_score + .5,
ifelse((means_line_graph$visit == 1 | means_line_graph$visit == 2 | means_line_graph$visit == 3) &
(means_line_graph$group_new == "Standard of Care"),
means_line_graph$mean_score - 2, means_line_graph$mean_score + .5))
# Create the line plot
ggplot(means_line_graph, aes(x = visit, y = mean_score, color = group_new, group = group_new)) +
geom_line(size = 1) +
geom_point(size = 3) +
geom_text(
aes(y = label_y, label = label),
size = 3,
vjust = "bottom"
) +
scale_x_continuous(breaks = 1:5) +
scale_color_manual(values = c("Intervention" = "darkorchid4", "Standard of Care" = "skyblue4")) +
labs(
title = "Mean Adherence Score by Visit and Study Arm",
x = "Visit",
y = "Mean Wilson Adherence Score",
color = "Study Arm"
) +
theme_minimal() +
theme(
legend.position = "top",
legend.title = element_blank()
) +
coord_cartesian(ylim = c(70, 95))
alluvial_data <- puma_all %>% dplyr::select(ptid, group_new, wilson_cat, ut_result, visit_coded) %>%
filter(!is.na(ut_result))
alluvial_plot <- ggplot(alluvial_data,
aes(x = visit_coded, stratum = wilson_cat, alluvium = ptid, fill = wilson_cat, label = wilson_cat)) +
scale_fill_manual(values = c("hotpink4", "dodgerblue4", "chartreuse4", "purple4", "lightblue4")) +
geom_flow(stat = "alluvium", lode.guidance = "rightleft",color = "darkgrey") +
geom_stratum() +
facet_wrap(~ ut_result) +  # Stratify by arm
ylab("Frequency") +
xlab("Visit") +
ggtitle("Wilson Adherence over Study Period by Urine Results") +
labs(fill = "Wilson Adherence") +
theme_light()
alluvial_plot
month12 <- month12 %>% mutate(hair_uncoded = case_when(detect_tfv == 0 ~ "Negative",
detect_tfv == 1 ~ "Positive"),
ut_uncoded = case_when(ut_result == 0 ~ "Negative",
ut_result == 1 ~ "Positive"))
month12$hair_uncoded <- factor(month12$hair_uncoded, levels = c("Negative", "Positive"))
hair_viz <- month12 %>% filter(!is.na(detect_tfv))
ut_viz <- month12 %>% filter(!is.na(ut_result))
# Approach 2: Using density plots with different linetypes for study groups
hair_density <- ggplot(hair_viz, aes(x = wilson_adh, fill = factor(hair_uncoded),
linetype = factor(group))) +
geom_density(aes(color = factor(hair_uncoded)), alpha = 0.3) +
scale_fill_manual(values = c("#3498db", "#e74c3c"),
name = "Medication A Adherence (Hair)") +
scale_color_manual(values = c("#3498db", "#e74c3c"),
name = "Medication A Adherence (Hair)") +
scale_linetype_manual(values = c("solid", "dashed"),
name = "Study Group") +
scale_y_continuous(expand = c(0, 0)) +  # This removes padding at the bottom
coord_cartesian(ylim = c(0, 0.06)) +
labs(title = "Distribution of Adherence Scores at Month 12",
subtitle = "By Medication A adherence (hair) and study arm",
x = "Adherence Score",
y = "Density") +
theme_minimal()
hair_density
# Approach 2: Using density plots with different linetypes for study groups
ut_density <- ggplot(ut_viz, aes(x = wilson_adh, fill = factor(ut_uncoded),
linetype = factor(group))) +
geom_density(aes(color = factor(ut_uncoded)), alpha = 0.3) +
scale_fill_manual(values = c("#3498db", "#e74c3c"),
name = "Urine Assay Result") +
scale_color_manual(values = c("#3498db", "#e74c3c"),
name = "Urine Assay Result") +
scale_linetype_manual(values = c("solid", "dashed"),
name = "Study Group") +
labs(title = "Distribution of Adherence Scores at Month 12",
subtitle = "By urine assay result and study arm",
x = "Adherence Score",
y = "Density") +
theme_minimal()
ut_density
knitr::opts_chunk$set(echo = TRUE)
#load packages
library(dplyr)
library(flextable)
library(ggplot2)
library(collapse)
library(labelled)
library(compareGroups)
library(gee)
library(geepack)
library(pROC)
library(ROCR)
library(plotROC)
library(gridExtra)
library(kableExtra)
library(ggalluvial)
pathway <- "~/Library/CloudStorage/Box-Box/Puma Analysis/Analysis/Code"
month12 <- readRDS(file.path(pathway, "/RDS/puma_month12.rds"))
puma_all <- readRDS(file.path(pathway, "/RDS/puma_long_clean.rds"))
secondary_long <- readRDS(file.path(pathway, "/RDS/puma_secondary_long.rds"))
output_path <- "~/Library/CloudStorage/Box-Box/Puma Analysis/Analysis/Code/Output"
# Source utility functions
source(file.path(pathway, "roc_utils.R"))
# Create ROC objects using utility function
urine_results <- create_roc(month12$ut_result, month12$wilson_adh)
hair_results <- create_roc(month12$detect_tfv, month12$wilson_adh)
hair2_results <- create_roc(month12$hair2_coded, month12$wilson_adh)
# Create legend labels with AUC values
urine_legend <- create_legend_with_auc("Urine (Neg/Pos)", urine_results$auc)
hair_legend <- create_legend_with_auc("Hair (Neg/Pos)", hair_results$auc)
hair2_legend <- create_legend_with_auc("Hair (Neg + Low/High)", hair2_results$auc)
# Plot ROC curves with AUC values in the legend
plot_multiple_roc(
roc_list = list(urine_results$roc, hair_results$roc, hair2_results$roc),
labels = c(urine_legend, hair_legend, hair2_legend),
colors = c("blue", "red", "darkgreen"),
main = "ROC Curves for Adherence Prediction"
)
# Plot just the hair2 ROC curve
plot(hair2_results$roc, col = "darkgreen", lwd = 2,
main = "ROC Curve for Adherence Predicition of Low vs High PrEP Adherence")
legend("bottomright",
legend = hair2_legend,
col = "darkgreen",
lwd = 2)
# Calculate Prevalence
prevalence_urine <- sum(month12$ut_result)/length(month12$ut_result)
# Calculate cutoff metrics for urine
cutoffs_urine <- seq(0, 100, by = 10)
results_urine <- calculate_cutoff_metrics(urine_results$roc, cutoffs_urine, prevalence = prevalence_urine)
# Find best cutoff for urine
best_cutoff_urine <- find_best_cutoff(urine_results$roc)
# Find cutoff that gives sensitivity closest to 90%
coords_df <- as.data.frame(coords(urine_results$roc, "all"))
closest_to_90 <- coords_df[which.min(abs(coords_df$sensitivity - 0.9)),]
cutoff_90sens_urine <- closest_to_90$threshold
#Calculate Prevalence
prevalence_hair <- sum(month12$detect_tfv, na.rm = TRUE)/length(month12$detect_tfv[!is.na(month12$detect_tfv)])
# Calculate cutoff metrics for hair
cutoffs_hair <- seq(0, 100, by = 10)
results_hair <- calculate_cutoff_metrics(hair_results$roc, cutoffs_hair, prevalence = prevalence_hair)
# Find best cutoff for hair
best_cutoff_hair <- find_best_cutoff(hair_results$roc)
results_hair
#Calculate Prevalence
prevalence_hair2 <- sum(month12$hair2_coded, na.rm = TRUE)/length(month12$hair2_coded[!is.na(month12$hair2_coded)])
# Calculate cutoff metrics for hair2
results_hair2 <- calculate_cutoff_metrics(hair2_results$roc, cutoffs_hair, prevalence = prevalence_hair2)
# Find best cutoff for hair2
best_cutoff_hair2 <- find_best_cutoff(hair2_results$roc)
results_hair2
# Create a combined model using utility function
predictors_df <- month12 %>%
select(ut_result, wilson_adh, hair2_coded) %>%
filter(!is.na(hair2_coded))
combined_results <- create_combined_roc(
response = month12$hair2_coded[!is.na(month12$hair2_coded)],
predictors = predictors_df,
model_formula = as.formula("response ~ wilson_adh + ut_result"),
family = poisson(link = "log")
)
# Plot the ROC curve
plot(combined_results$roc, main = "ROC Curve for Combined Predictors of Self-report Adherence and Urine Result",
col = "blue", lwd = 2)
# Add legend with AUC
legend("bottomright",
legend = paste0("Hair (Neg + Low/High) AUC = ", combined_results$auc_formatted),
col = "blue", lwd = 2)
# Calculate cutoff metrics for a sequence of cutoffs
cutoffs <- seq(0, 1, by = 0.1)
results_combined <- calculate_cutoff_metrics(combined_results$roc, cutoffs)
results_combined
# 1. Combined model (adherence score + urine)
plot1 <- create_roc_plot(combined_results$roc, "A. Self-Report Adherence and Urine Result Prediction for Hair Results", "blue", "Hair (Neg + Low/High), AUC")
# 2. Urine outcome
plot2 <- create_roc_plot(urine_results$roc, "C. Self-Report Adherence Prediction of Urine Results", "red", "Urine (Neg/Pos), AUC")
# 3. Hair Outcome
plot3 <- create_roc_plot(hair_results$roc, "D. Self-Report Adherence Prediction of Hair Results", "green", "Hair (Neg/Pos), AUC")
# 4. Another analysis (e.g., with interaction terms)
plot4 <- create_roc_plot(hair2_results$roc, "B. Self-Report Adherence Prediction of Hair Results", "purple", "Hair (Neg + Low/High), AUC")
# Combine all plots into a 2x2 grid
combined_plot <- grid.arrange(plot1, plot4, plot2, plot3, ncol = 2)
combined_plot
# Save the combined plot
ggsave(file.path(output_path, "/combined_roc_plots.png"), combined_plot, width = 12, height = 8, dpi = 300)
# 1. Combined model (adherence score + urine)
plot1 <- create_roc_plot(hair2_results$roc, "A. Self-Report Adherence Prediction of Hair Results", "purple", "Hair (Neg + Low/High), AUC")
# 2. Combined model (adherence score + urine
plot2 <-  create_roc_plot(combined_results$roc, "A. Self-Report Adherence and Urine Result Prediction for Hair Results", "blue", "Hair (Neg + Low/High), AUC")
# 2. Urine outcome
plot3 <- create_roc_plot(urine_results$roc, "C. Self-Report Adherence Prediction of Urine Results", "red", "Urine (Neg/Pos), AUC")
# 3. Hair Outcome
plot4 <- create_roc_plot(hair_results$roc, "D. Self-Report Adherence Prediction of Hair Results", "green", "Hair (Neg/Pos), AUC")
# Combine all plots into a 2x2 grid
combined_plot <- grid.arrange(plot1, plot2, plot3, plot4, ncol = 2)
combined_plot
# Save the combined plot
ggsave(file.path(output_path, "/combined_roc_plots.png"), combined_plot, width = 12, height = 8, dpi = 300)
# 1. Combined model (adherence score + urine)
plot1 <- create_roc_plot(hair2_results$roc, "A. Self-Report Adherence Prediction of Hair Results", "purple", "Hair (Neg + Low/High), AUC")
# 2. Combined model (adherence score + urine
plot2 <-  create_roc_plot(combined_results$roc, "B. Self-Report Adherence and Urine Result Prediction for Hair Results", "blue", "Hair (Neg + Low/High), AUC")
# 2. Urine outcome
plot3 <- create_roc_plot(urine_results$roc, "C. Self-Report Adherence Prediction of Urine Results", "red", "Urine (Neg/Pos), AUC")
# 3. Hair Outcome
plot4 <- create_roc_plot(hair_results$roc, "D. Self-Report Adherence Prediction of Hair Results", "green", "Hair (Neg/Pos), AUC")
# Combine all plots into a 2x2 grid
combined_plot <- grid.arrange(plot1, plot2, plot3, plot4, ncol = 2)
combined_plot
# Save the combined plot
ggsave(file.path(output_path, "/combined_roc_plots.png"), combined_plot, width = 12, height = 8, dpi = 300)
