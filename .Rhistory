val_labels(puma_all$padh7) <- c("Very poor" = 0, "Poor" = 1, "Fair" = 2, "Good" = 3, "Very good" = 4, "Excellent" = 5)
val_labels(puma_all$padh7)
puma_all$padh7 <- to_character(puma_all$padh7)
puma_all <- puma_all %>% mutate(padh7_recode = case_when(padh7 == "Very poor" ~ 0,
padh7 == "Poor" ~.2,
padh7 == "Fair" ~ .4,
padh7 == "Good" ~ .6,
padh7 == "Very good" ~ .8,
padh7 == "Excellent" ~ 1))
puma_all <- puma_all %>% relocate(padh7_recode, .after = padh7)
puma_all <- puma_all %>% mutate(padh4 = ifelse(padh3 == 1, 0, padh4))
puma_all <- puma_all %>% mutate(padh4_recode = (30-padh4)/30)
puma_all <- puma_all %>% relocate(padh4_recode, .after = padh4)
puma_all <- puma_all %>% mutate(avg_padh = ((padh4_recode + padh7_recode)/2)*100)
puma_all <- puma_all %>% relocate(avg_padh, .after = wilson_adh)
## Scaling Wilson Adherence Score
puma_all <- puma_all %>% mutate(wilson_adh_scaled_sd = wilson_adh/sd(wilson_adh,
na.rm = TRUE))
puma_all <- puma_all %>% relocate(wilson_adh_scaled_sd, .after = wilson_adh)
## Coded version of visits for visualizations
puma_all$visit_coded <- factor(puma_all$visit, levels = c(1, 2, 3, 4, 5),
labels = c("Baseline", "Month3", "Month6",
"Month9", "Month12"))
puma_all$ptid  <- as.character(puma_all$ptid)
### Recode Hair Data with STRAND doses
# 3 levels
# duplicate hair3code
puma_all$hair3numeric <- puma_all$hair3code
table(puma_all$hair3code)
puma_all$hair3code <- factor(puma_all$hair3code, levels = c(1, 2, 3),
labels = c("<2", "2 to 3", ">=4"))
table(puma_all$hair3code)
# 4 levels
table(puma_all$hair4code, useNA = "ifany")
puma_all$hair4code <- factor(puma_all$hair4code, levels = c(1, 2, 3, 4),
labels = c("<2", "2 to 3", "4-6", "Daily"))
table(puma_all$hair4code, useNA = "ifany")
# 3 with BLQ separated out
table(puma_all$hair4blq, useNA = "ifany")
puma_all$hair4blq <- factor(puma_all$hair4blq, levels = c(0, 1, 2, 3),
labels = c("BLQ", "<2", "2 to 3", ">=4"))
table(puma_all$hair4blq, useNA = "ifany")
# 4 with BLQ separated out
table(puma_all$hair5blq, useNA = "ifany")
puma_all$hair5blq <- factor(puma_all$hair5blq, levels = c(0, 1, 2, 3, 4),
labels = c("BLQ", "<2", "2 to 3", "4-6", "Daily"))
table(puma_all$hair5blq, useNA = "ifany")
## Low vs High Hair Variable
puma_all <- puma_all %>% mutate(hair2code = case_when(hair3code == "<2" ~ "<=3",
hair3code == "2 to 3" ~ "<=3",
hair3code == ">=4" ~">=4"),
hair2_coded = ifelse(hair2code == ">=4", 1, 0)) %>%
relocate(c(hair2code, hair2_coded), .after = hair3code)
## Create a categorical Wilson Adherence Score for Alluvial Plots
puma_all <- puma_all %>% mutate(wilson_cat = case_when(wilson_adh >= 0 & wilson_adh <= 20 ~ "0-20",
wilson_adh >= 21 & wilson_adh <= 40 ~ "21-40",
wilson_adh >= 41 & wilson_adh <= 60 ~ "41-60",
wilson_adh >= 61 & wilson_adh <= 80 ~ "61-80",
wilson_adh >= 81 & wilson_adh <= 100 ~ "81-100"))
puma_all <- puma_all %>% relocate(wilson_cat, .after = wilson_adh)
#csv
write.csv(puma_all, file.path(pathway, "/Code/CSVs/PUMA_Long_Clean.csv"))
#RDS
saveRDS(puma_all, file = file.path(pathway, "/Code/RDS/puma_long_clean.rds"))
## Smaller month 12 dataframe
month12 <- puma_all %>% filter(visit == 5)
#csv
write.csv(month12, file.path(pathway, "/Code/CSVs/PUMA_month12.csv"))
#RDS
saveRDS(month12, file = file.path(pathway, "/Code/RDS/puma_month12.rds"))
# Limit to baseline data
baseline <- puma_all %>% filter(visit == 1)
#csv
write.csv(baseline, file.path(pathway, "/Code/CSVs/PUMA_baseline.csv"))
#RDS
saveRDS(baseline, file = file.path(pathway, "/Code/RDS/puma_baseline.rds"))
# POC
poc_all <- puma_all %>% filter(group == "Intervention")
# EXPORT
##csv
write.csv(poc_all, file.path(pathway, "/Code/CSVs/PUMA_poc_all.csv"))
##RDS
saveRDS(poc_all, file = file.path(pathway, "/Code/RDS/puma_poc_all.rds"))
# SOC
soc_all <- puma_all %>% filter(group == "Standard of Care")
# EXPORT
##csv
write.csv(soc_all, file.path(pathway, "/Code/CSVs/PUMA_soc_all.csv"))
##RDS
saveRDS(soc_all, file = file.path(pathway, "/Code/RDS/puma_soc_all.rds"))
# Urine
ut_long <- puma_all %>% select(group_new, ut_result, visit, ptid)
ut_long <- as.data.frame(ut_long)
# EXPORT
##csv
write.csv(ut_long, file.path(pathway, "/Code/CSVs/PUMA_urine_long.csv"))
##RDS
saveRDS(ut_long, file = file.path(pathway, "/Code/RDS/puma_urine_long.rds"))
ut_wide <- reshape(ut_long, v.names = "ut_result", idvar = c("ptid", "group_new"),
timevar = "visit", direction = "wide")
# EXPORT
##csv
write.csv(ut_wide, file.path(pathway, "/Code/CSVs/PUMA_urine_wide.csv"))
##RDS
saveRDS(ut_wide, file = file.path(pathway, "/Code/RDS/puma_urine_wide.rds"))
# Hair
hair_long <- puma_all %>% select(group, detect_tfv, visit, ptid)
hair_long <- as.data.frame(hair_long)
hair_wide <- reshape(hair_long, v.names = "detect_tfv", idvar = c("ptid", "group"),
timevar = "visit", direction = "wide")
# EXPORT
##csv
write.csv(hair_wide, file.path(pathway, "/Code/CSVs/PUMA_hair_wide.csv"))
##RDS
saveRDS(hair_wide, file = file.path(pathway, "/Code/RDS/puma_hair_wide.rds"))
adherence <- puma_all %>% select(group_new, wilson_adh, padh7_recode, padh4_recode, visit, ptid)
adherence_wide <- reshape(adherence, v.names = c("wilson_adh", "padh7_recode", "padh4_recode"), idvar = "ptid",timevar = "visit", direction = "wide")
# EXPORT
##csv
write.csv(adherence_wide, file.path(pathway, "/Code/CSVs/PUMA_adherence_wide.csv"))
##RDS
saveRDS(adherence_wide, file = file.path(pathway, "/Code/RDS/puma_adherence_wide.rds"))
## Turn primary dataset into wide dataset
puma_all <- as.data.frame(puma_all) #must be just data.frame for next step to work
primary_long <- puma_all %>% select(ptid, group_new, visit, detect_tfv, ut_result,
wilson_adh, wilson_adh_scaled_sd)
primary_wide <- reshape(primary_long, idvar = c("ptid", "group_new"), timevar = "visit", direction = "wide")
# EXPORT
##csv
write.csv(primary_wide, file.path(pathway, "/Code/CSVs/PUMA_primary_wide.csv"))
##RDS
saveRDS(primary_wide, file = file.path(pathway, "/Code/RDS/puma_primary_wide.rds"))
# Turn secondary dataset into wide dataset
puma_all <- as.data.frame(puma_all) #must be just data.frame for next step to work
secondary_long <- puma_all %>% select(ptid, group_new, visit, detect_tfv, ut_result, hair2_coded, hair2code,
wilson_adh, wilson_adh_scaled_sd, padh4, padh7,
ppoz_coded, marital, income, travel_coded,
incsource_coded, edu, emp_coded,mh14, sex1,
prep_length,condomless_sex, sex14, age)
secondary_wide <- reshape(secondary_long, idvar = c("ptid", "group_new"), timevar = "visit", direction = "wide")
# Remove variables not needed at all timeframes
secondary_wide <- secondary_wide %>% select(- c(prep_length.2, prep_length.3, prep_length.4, prep_length.5,
marital.2, marital.3, marital.4, marital.5, sex1.2,
sex1.3, sex1.4, sex1.5, age.2, age.3, age.4, age.5, edu.2, edu.3, edu.4,
edu.5, ppoz_coded.2, ppoz_coded.3, ppoz_coded.4, ppoz_coded.5,
incsource_coded.2, incsource_coded.3, incsource_coded.4, incsource_coded.5,
sex1.2, sex1.3, sex1.4, sex1.5, prep_length.2, prep_length.3, prep_length.4,
prep_length.5))
# EXPORT
##csv
write.csv(secondary_wide, file.path(pathway, "/Code/CSVs/PUMA_secondary_wide.csv"))
##RDS
saveRDS(secondary_wide, file = file.path(pathway, "/Code/RDS/puma_secondary_wide.rds"))
# EXPORT
##csv
write.csv(secondary_long, file.path(pathway, "/Code/CSVs/PUMA_secondary_long.csv"))
##RDS
saveRDS(secondary_long, file = file.path(pathway, "/Code/RDS/puma_secondary_long.rds"))
knitr::opts_chunk$set(echo = TRUE)
#load packages
library(dplyr)
library(flextable)
library(ggplot2)
library(collapse)
library(labelled)
library(compareGroups)
library(gee)
library(geepack)
library(pROC)
library(ROCR)
library(plotROC)
library(gridExtra)
library(kableExtra)
library(ggalluvial)
pathway <- "~/Library/CloudStorage/Box-Box/Puma Analysis/Analysis/Code"
month12 <- readRDS(file.path(pathway, "/RDS/puma_month12.rds"))
puma_all <- readRDS(file.path(pathway, "/RDS/puma_long_clean.rds"))
secondary_long <- readRDS(file.path(pathway, "/RDS/puma_secondary_long.rds"))
output_path <- "~/Library/CloudStorage/Box-Box/Puma Analysis/Analysis/Code/Output"
source("analysis_utilities.R")
# Create dataframes for the GEE models section
## Hair
hair_gee_data <- prepare_gee_data(
puma_all,
outcome = "detect_tfv",
predictors = c("wilson_adh_scaled_sd", "group_new"),
additional_vars = c("wilson_adh10", "wilson_adh", "hair3numeric", "hair2_coded",
"emp_coded", "age", "edu")
)
## Urine
ut_gee_data <- prepare_gee_data(
puma_all,
outcome = "ut_result",
predictors = c("wilson_adh_scaled_sd", "group_new"),
additional_vars = c("wilson_adh", "wilson_adh10", "emp_coded", "age", "edu")
)
## Continuous hair
continuous_data <- prepare_gee_data(
puma_all,
outcome = "tfvngml",
predictors = c("wilson_adh_scaled_sd", "group_new"),
additional_vars = c("wilson_adh", "wilson_adh10", "ptid", "visit", "detect_tfv")
)
## POC all
poc_all <- prepare_gee_data(
puma_all,
outcome = "ut_result",
predictors = c("wilson_adh_scaled_sd", "group_new"),
additional_vars = c("wilson_adh", "wilson_adh10", "ptid", "visit", "detect_tfv")
)
poc_all <- poc_all %>% filter(group_new == "Intervention")
## SOC all
soc_all <- prepare_gee_data(
puma_all,
outcome = "ut_result",
predictors = c("wilson_adh_scaled_sd", "group_new"),
additional_vars = c("wilson_adh", "wilson_adh10", "ptid", "visit", "detect_tfv")
)
soc_all <- soc_all %>% filter(group_new == "Standard of Care")
hair_sd_results <- run_gee_model(
hair_gee_data,
outcome = "detect_tfv",
predictors = c("wilson_adh_scaled_sd", "group_new")
)
flextable(hair_sd_results)
hair_results <- run_gee_model(
hair_gee_data,
outcome = "detect_tfv",
predictors = c("wilson_adh", "group_new")
)
flextable(hair_results)
hair_10_results <- run_gee_model(
hair_gee_data,
outcome = "detect_tfv",
predictors = c("wilson_adh10", "group_new")
)
flextable(hair_10_results)
# Association between adherence and continuous hair levels
# Linear regression with a GEE model
# Association between adherence and continuous hair levels
hair_cont_results <- run_gee_continuous_model(
continuous_data,
outcome = "tfvngml",
predictors = c("wilson_adh_scaled_sd", "group_new")
)
flextable(hair_cont_results)
hair_3cat_results <- run_gee_model(
hair_gee_data,
outcome = "hair3numeric",
predictors = c("wilson_adh_scaled_sd", "group_new")
)
flextable(hair_3cat_results)
hair_2cat_results <- run_gee_model(
hair_gee_data,
outcome = "hair2_coded",
predictors = c("wilson_adh_scaled_sd", "group_new")
)
flextable(hair_2cat_results)
# Urine model with scaled_sd
ut_sd_results <- run_gee_model(
ut_gee_data,
outcome = "ut_result",
predictors = c("wilson_adh_scaled_sd", "group_new")
)
flextable(ut_sd_results)
urine_results <- run_gee_model(
ut_gee_data,
outcome = "ut_result",
predictors = c("wilson_adh", "group_new")
)
flextable(urine_results)
ut_10_results <- run_gee_model(
ut_gee_data,
outcome = "ut_result",
predictors = c("wilson_adh10", "group_new")
)
flextable(ut_10_results)
# List of predictor variables selected a priori
predictors <- c("wilson_adh", "wilson_adh_scaled_sd", "padh4", "padh7",
"ppoz_coded", "marital", "income", "travel_coded",
"incsource_coded", "edu", "emp_coded", "mh14", "sex1",
"prep_length", "condomless_sex", "sex14", "age")
# List of outcome variables
outcomes <- c("ut_result", "hair2_coded")
# Run univariable analysis
univariable_results <- run_univariable_analysis(
data = secondary_long,
predictors = predictors,
outcomes = outcomes
)
# Get summary of significant predictors
significant_predictors <- summarize_univariable_results(univariable_results)
# Display the full results table
print(univariable_results)
## Associated univariable with ut:
### emp_coded, age
## Associated univariable with detect_tfv
### edu
View(univariable_results)
edu_results <- run_gee_model(
secondary_long,
outcome = "hair2_coded",
predictors = c("edu")
)
flextable(edu_results)
age_results_h <- run_gee_model(
secondary_long,
outcome = "hair2_coded",
predictors = c("age")
)
flextable(age_results_h)
age_edu_model_hr <- geeglm(hair2_coded ~ group_new + wilson_adh_scaled_sd + edu + age,
id = ptid,
family = poisson(link = "log"),
corstr = "exchangeable",
data = hr_multivar)
forward_selection_vars <- c("edu", "emp_coded", "age", "hair2_coded", "ut_result",
"group_new", "wilson_adh_scaled_sd", "ptid")
multivar_data <- secondary_long[forward_selection_vars]
### Urine Assay
# Remove NAs
multivar_data <-multivar_data[complete.cases(multivar_data),]
ut_multivar <- multivar_data %>% select(-hair2_coded)
multivar_data <-multivar_data[complete.cases(multivar_data),]
hr_multivar <- multivar_data %>% select(-ut_result)
# Add in edu
edu_model_hr <- geeglm(hair2_coded ~ group_new + wilson_adh_scaled_sd + edu,
id = ptid,
family = poisson(link = "log"),
corstr = "exchangeable",
data = hr_multivar)
# QIC is lower than just Wilson ADH
QIC(edu_model_hr)
# Add in age
age_edu_model_hr <- geeglm(hair2_coded ~ group_new + wilson_adh_scaled_sd + edu + age,
id = ptid,
family = poisson(link = "log"),
corstr = "exchangeable",
data = hr_multivar)
# QIC is lower than just Wilson ADH
QIC(age_edu_model_hr)
QIC(edu_model_hr)
QIC(edu_model2_hr)
QIC(age_edu_model_hr)
QIC(edu_model_hr)
full_m_hr <- run_gee_model(
secondary_long,
outcome = "hair2_coded",
predictors = c("group_new", "wilson_adh_scaled_sd", "edu")
)
flextable(full_m_hr)
wilson_model_hr <- geeglm(hair2_coded ~ group_new + wilson_adh_scaled_sd,
id = ptid,
family = poisson(link = "log"),
corstr = "exchangeable",
data = hr_multivar)
QIC(wilson_model_hr)
QIC(edu_model_hr)
m_hair <- run_gee_model(
secondary_long,
outcome = "hair2_coded",
predictors = c("group_new", "wilson_adh_scaled_sd", "edu", "age")
)
flextable(m_hair)
mhair_glm <- geeglm(hair2_coded ~ group_new + edu + age + wilson_adh_scaled_sd,
id = ptid,
family = poisson(link = "log"),
corstr = "exchangeable",
data = hr_multivar)
QIC(mhair_glm)
knitr::opts_chunk$set(echo = TRUE)
#load packages
library(dplyr)
library(flextable)
library(ggplot2)
library(collapse)
library(labelled)
library(compareGroups)
library(gee)
library(geepack)
library(pROC)
library(ROCR)
library(plotROC)
library(gridExtra)
library(kableExtra)
library(ggalluvial)
pathway <- "~/Library/CloudStorage/Box-Box/Puma Analysis/Analysis/Code"
month12 <- readRDS(file.path(pathway, "/RDS/puma_month12.rds"))
puma_all <- readRDS(file.path(pathway, "/RDS/puma_long_clean.rds"))
secondary_long <- readRDS(file.path(pathway, "/RDS/puma_secondary_long.rds"))
output_path <- "~/Library/CloudStorage/Box-Box/Puma Analysis/Analysis/Code/Output"
# Wilson score line graph
line_graph_df <- puma_all %>% dplyr::select(ptid, group_new, wilson_adh, visit)
means_line_graph <- line_graph_df %>% group_by(visit, group_new) %>%
summarise(mean_score = mean(wilson_adh, na.rm = TRUE),
sd_score = sd(wilson_adh, na.rm = TRUE)) %>%
ungroup()
means_line_graph_t <- line_graph_df %>% group_by(visit) %>%
summarise(mean_score = mean(wilson_adh, na.rm = TRUE),
sd_score = sd(wilson_adh, na.rm = TRUE)) %>%
ungroup()
## Total sample
# Create labels with mean and sd
means_line_graph_t$label <- sprintf("%.1f\n(SD: %.1f)", means_line_graph_t$mean_score, means_line_graph_t$sd_score)
# Add a small offset to position labels slightly above the points
means_line_graph_t$label_y <- means_line_graph_t$mean_score + 2
ggplot(means_line_graph_t, aes(x = visit, y = mean_score)) +
geom_line(size = 1) +
geom_point(size = 3) +
geom_text(
aes(y = label_y, label = label),
size = 3,
vjust = "bottom"
) +
scale_x_continuous(breaks = 1:5) +
labs(
title = "Mean Adherence Score by Visit",
x = "Visit",
y = "Mean Wilson Adherence Score"
) +
theme_minimal() +
theme(
legend.position = "top",
legend.title = element_blank()
) +
coord_cartesian(ylim = c(70, 95))
# Create labels with mean and sd
means_line_graph$label <- sprintf("%.1f\n(SD: %.1f)", means_line_graph$mean_score, means_line_graph$sd_score)
# Add a small offset to position labels slightly above the points
means_line_graph$label_y <- ifelse(means_line_graph$group_new == "Intervention",
means_line_graph$mean_score + .5,
ifelse((means_line_graph$visit == 1 | means_line_graph$visit == 2 | means_line_graph$visit == 3) &
(means_line_graph$group_new == "Standard of Care"),
means_line_graph$mean_score - 2, means_line_graph$mean_score + .5))
# Create the line plot
ggplot(means_line_graph, aes(x = visit, y = mean_score, color = group_new, group = group_new)) +
geom_line(size = 1) +
geom_point(size = 3) +
geom_text(
aes(y = label_y, label = label),
size = 3,
vjust = "bottom"
) +
scale_x_continuous(breaks = 1:5) +
scale_color_manual(values = c("Intervention" = "darkorchid4", "Standard of Care" = "skyblue4")) +
labs(
title = "Mean Adherence Score by Visit and Study Arm",
x = "Visit",
y = "Mean Wilson Adherence Score",
color = "Study Arm"
) +
theme_minimal() +
theme(
legend.position = "top",
legend.title = element_blank()
) +
coord_cartesian(ylim = c(70, 95))
alluvial_data <- puma_all %>% dplyr::select(ptid, group_new, wilson_cat, ut_result, visit_coded) %>%
filter(!is.na(ut_result))
alluvial_plot <- ggplot(alluvial_data,
aes(x = visit_coded, stratum = wilson_cat, alluvium = ptid, fill = wilson_cat, label = wilson_cat)) +
scale_fill_manual(values = c("hotpink4", "dodgerblue4", "chartreuse4", "purple4", "lightblue4")) +
geom_flow(stat = "alluvium", lode.guidance = "rightleft",color = "darkgrey") +
geom_stratum() +
facet_wrap(~ ut_result) +  # Stratify by arm
ylab("Frequency") +
xlab("Visit") +
ggtitle("Wilson Adherence over Study Period by Urine Results") +
labs(fill = "Wilson Adherence") +
theme_light()
alluvial_plot
month12 <- month12 %>% mutate(hair_uncoded = case_when(detect_tfv == 0 ~ "Negative",
detect_tfv == 1 ~ "Positive"),
ut_uncoded = case_when(ut_result == 0 ~ "Negative",
ut_result == 1 ~ "Positive"))
month12$hair_uncoded <- factor(month12$hair_uncoded, levels = c("Negative", "Positive"))
hair_viz <- month12 %>% filter(!is.na(detect_tfv))
ut_viz <- month12 %>% filter(!is.na(ut_result))
# Approach 2: Using density plots with different linetypes for study groups
hair_density <- ggplot(hair_viz, aes(x = wilson_adh, fill = factor(hair_uncoded),
linetype = factor(group))) +
geom_density(aes(color = factor(hair_uncoded)), alpha = 0.3) +
scale_fill_manual(values = c("#3498db", "#e74c3c"),
name = "Medication A Adherence (Hair)") +
scale_color_manual(values = c("#3498db", "#e74c3c"),
name = "Medication A Adherence (Hair)") +
scale_linetype_manual(values = c("solid", "dashed"),
name = "Study Group") +
scale_y_continuous(expand = c(0, 0)) +  # This removes padding at the bottom
coord_cartesian(ylim = c(0, 0.06)) +
labs(title = "Distribution of Adherence Scores at Month 12",
subtitle = "By Medication A adherence (hair) and study arm",
x = "Adherence Score",
y = "Density") +
theme_minimal()
hair_density
# Approach 2: Using density plots with different linetypes for study groups
ut_density <- ggplot(ut_viz, aes(x = wilson_adh, fill = factor(ut_uncoded),
linetype = factor(group))) +
geom_density(aes(color = factor(ut_uncoded)), alpha = 0.3) +
scale_fill_manual(values = c("#3498db", "#e74c3c"),
name = "Urine Assay Result") +
scale_color_manual(values = c("#3498db", "#e74c3c"),
name = "Urine Assay Result") +
scale_linetype_manual(values = c("solid", "dashed"),
name = "Study Group") +
labs(title = "Distribution of Adherence Scores at Month 12",
subtitle = "By urine assay result and study arm",
x = "Adherence Score",
y = "Density") +
theme_minimal()
ut_density
