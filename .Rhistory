# 4. Another analysis (e.g., with interaction terms)
plot4 <- create_roc_plot(hair2_results$roc, "B. Self-Report Adherence Prediction of Hair Results", "purple", "Hair (Neg + Low/High), AUC")
# Combine all plots into a 2x2 grid
combined_plot <- grid.arrange(plot1, plot4, plot2, plot3, ncol = 2)
combined_plot
# Save the combined plot
ggsave(file.path(output_path, "/combined_roc_plots.png"), combined_plot, width = 12, height = 8, dpi = 300)
# 1. Combined model (adherence score + urine)
plot1 <- create_roc_plot(hair2_results$roc, "A. Self-Report Adherence Prediction of Hair Results", "purple", "Hair (Neg + Low/High), AUC")
# 2. Combined model (adherence score + urine
plot2 <-  create_roc_plot(combined_results$roc, "A. Self-Report Adherence and Urine Result Prediction for Hair Results", "blue", "Hair (Neg + Low/High), AUC")
# 2. Urine outcome
plot3 <- create_roc_plot(urine_results$roc, "C. Self-Report Adherence Prediction of Urine Results", "red", "Urine (Neg/Pos), AUC")
# 3. Hair Outcome
plot4 <- create_roc_plot(hair_results$roc, "D. Self-Report Adherence Prediction of Hair Results", "green", "Hair (Neg/Pos), AUC")
# Combine all plots into a 2x2 grid
combined_plot <- grid.arrange(plot1, plot2, plot3, plot4, ncol = 2)
combined_plot
# Save the combined plot
ggsave(file.path(output_path, "/combined_roc_plots.png"), combined_plot, width = 12, height = 8, dpi = 300)
# 1. Combined model (adherence score + urine)
plot1 <- create_roc_plot(hair2_results$roc, "A. Self-Report Adherence Prediction of Hair Results", "purple", "Hair (Neg + Low/High), AUC")
# 2. Combined model (adherence score + urine
plot2 <-  create_roc_plot(combined_results$roc, "B. Self-Report Adherence and Urine Result Prediction for Hair Results", "blue", "Hair (Neg + Low/High), AUC")
# 2. Urine outcome
plot3 <- create_roc_plot(urine_results$roc, "C. Self-Report Adherence Prediction of Urine Results", "red", "Urine (Neg/Pos), AUC")
# 3. Hair Outcome
plot4 <- create_roc_plot(hair_results$roc, "D. Self-Report Adherence Prediction of Hair Results", "green", "Hair (Neg/Pos), AUC")
# Combine all plots into a 2x2 grid
combined_plot <- grid.arrange(plot1, plot2, plot3, plot4, ncol = 2)
combined_plot
# Save the combined plot
ggsave(file.path(output_path, "/combined_roc_plots.png"), combined_plot, width = 12, height = 8, dpi = 300)
knitr::opts_chunk$set(echo = TRUE)
#load packages
library(dplyr)
library(flextable)
library(ggplot2)
library(collapse)
library(labelled)
library(compareGroups)
library(gee)
library(geepack)
library(pROC)
library(ROCR)
library(plotROC)
library(gridExtra)
library(kableExtra)
library(ggalluvial)
# Load utility functions
source("descriptive_utils.R")
pathway <- "~/Library/CloudStorage/Box-Box/Puma Analysis/Analysis/Code"
month12 <- readRDS(file.path(pathway, "/RDS/puma_month12.rds"))
puma_all <- readRDS(file.path(pathway, "/RDS/puma_long_clean.rds"))
primary_wide <- readRDS(file.path(pathway, "/RDS/puma_primary_wide.rds"))
hair_wide <- readRDS(file.path(pathway, "/RDS/puma_hair_wide.rds"))
ut_wide <- readRDS(file.path(pathway, "/RDS/puma_urine_wide.rds"))
adherence_wide <- readRDS(file.path(pathway, "/RDS/puma_adherence_wide.rds"))
ut_long <- readRDS(file.path(pathway, "/RDS/puma_urine_long.rds"))
output_path <- "~/Library/CloudStorage/Box-Box/Puma Analysis/Analysis/Code/Output"
# Re-code variables for ease of creating Table 1
puma_all$group_new <- factor(puma_all$group_new, levels = c("Standard of Care", "Intervention"))
ut_long$group_new <- factor(ut_long$group_new, levels = c("Standard of Care", "Intervention"))
# create a list of binary variables to code as yes/no from 1/0
table1_data <- puma_all %>% filter(visit == 1)
bin_variables <- c("marital", "sex8", "sex10", "sex12", "sex14", "par5___1", "par5___2",
"par5___3", "par5___4", "par5___5", "par5___6", "par5___7",
"par5___8", "par5___9", "padh3", "padh9___1", "padh9___2",
"padh9___3", "padh9___4", "padh9___5", "padh9___6", "padh9___7",
"padh9___8", "padh9___9", "padh9___10", "padh9___11", "padh9___12",
"padh9___13", "padh9___14", "padh9___15", "padh9____9", "padh10",
"mh14", "mh16", "mh17", "ut_result", "detect_tfv", "condomless_sex",
"new_partner", "HIV_pos_partner","unknown_HIV", "HIV_neg_partner",
"bc_any")
for (var in bin_variables){
table1_data[[var]] <- ifelse(table1_data[[var]] == 1, "Yes", "No")
}
table1_data <- table1_data %>% select("age", "edu", "income", "sex1", "prep_length",
"padh3", "padh6", "emp_coded",
"ppoz_coded", "marital", "mh14", "bc_any",
"travel_coded","incsource_coded", "sex5",
"sex2", "condomless_sex", "new_partner",
"HIV_pos_partner", "unknown_HIV",
"HIV_neg_partner", "sex14","group")
table1_arms <- compareGroups(group~ ., data = table1_data,na.omit(TRUE))
export_table1_arms <- createTable(table1_arms, show.p.overall=FALSE)
export_table1_arms
export2word(export_table1_arms, file = file.path(output_path, "/Tables/Table 1 by Arm.docx"))
table1_all <- compareGroups(~ ., data = table1_data,na.omit(TRUE))
export_table1_all <- createTable(table1_all, show.p.overall=FALSE)
export_table1_all
export2word(export_table1_all, file = file.path(output_path, "/Tables/Table 1 Total.docx"))
hair_detection_results <- summarize_across_visits(
data = hair_wide,
var_prefix = "detect_tfv",
visits = 1:5,
group_var = "group",
stat_func = function(x, na.rm=TRUE) sum(x, na.rm=na.rm)/sum(!is.na(x))
)
# Add counts of positive results for hair
hair_positive_counts <- summarize_across_visits(
data = hair_wide,
var_prefix = "detect_tfv",
visits = 1:5,
group_var = "group",
stat_func = function(x, na.rm=TRUE) sum(x, na.rm=na.rm)
)
# Also get missing counts
missing_hair <- summarize_across_visits(
data = hair_wide,
var_prefix = "detect_tfv",
visits = 1:5,
stat_func = function(x, na.rm=TRUE) sum(is.na(x))
)
# Create subsets by study arm
hair_poc <- hair_wide %>% filter(group == "Intervention")
hair_soc <- hair_wide %>% filter(group == "Standard of Care")
# Run chi-squared tests for all visits using a loop
chi_results_hair <- data.frame(
Visit = 1:5,
ChiSq = numeric(5),
P_value = numeric(5),
Overall_p = numeric(5)
)
for (i in 1:5) {
var_name <- paste0("detect_tfv.", i)
# Between-group test
test_result <- run_chi_square(hair_wide, "group", var_name)
chi_results_hair$ChiSq[i] <- test_result$statistic
chi_results_hair$P_value[i] <- test_result$p.value
# Overall test
overall_test <- run_chi_square(hair_wide, var_name)
chi_results_hair$Overall_p[i] <- overall_test$p.value
}
print(chi_results_hair)
# Categorical analysis over study period
# Analyze all categorical hair variables
hair_categorical_results <- analyze_categorical_across_visits(
data = puma_all,
var_names = c("hair3code", "hair4blq", "hair2code"),
visits = 1:5,
group_var = "group_new"
)
colnames(hair_wide)
puma_all
colnames(puma_all)
View(puma_all)
chi_results_hair_cat <- data.frame(
Visit = 1:5,
ChiSq = numeric(5),
P_value = numeric(5),
Overall_p = numeric(5)
)
for (i in 1:5) {
var_name <- paste0("hair2_coded", i)
# Between-group test
test_result <- run_chi_square(hair_wide, "group", var_name)
chi_results_hair_cat$ChiSq[i] <- test_result$statistic
chi_results_hair_cat$P_value[i] <- test_result$p.value
# Overall test
overall_test <- run_chi_square(hair_wide, var_name)
chi_results_hair_cat$Overall_p[i] <- overall_test$p.value
}
for (i in 1:5) {
var_name <- paste0("hair2_coded", i)
# Between-group test
test_result <- run_chi_square(puma_all, "group", var_name)
chi_results_hair_cat$ChiSq[i] <- test_result$statistic
chi_results_hair_cat$P_value[i] <- test_result$p.value
# Overall test
overall_test <- run_chi_square(puma_all, var_name)
chi_results_hair_cat$Overall_p[i] <- overall_test$p.value
}
chisq.test(puma_all$hair2_coded, puma_all$group)
knitr::opts_chunk$set(echo = TRUE)
#load packages
library(dplyr)
library(flextable)
library(ggplot2)
library(collapse)
library(labelled)
library(compareGroups)
library(gee)
library(geepack)
library(pROC)
library(ROCR)
library(plotROC)
library(gridExtra)
library(kableExtra)
library(ggalluvial)
pathway <- "~/Library/CloudStorage/Box-Box/Puma Analysis/Analysis/"
puma_all <- read.csv(file.path(pathway, "PUMAextract_13Mar2025.csv"))
# Create any BC variable
puma_all$bc_any <- ifelse(puma_all$par5_recode == 0, 0, ifelse(puma_all$par5_recode == 99, NA, 1))
puma_all <- puma_all %>% mutate(new_partner = ifelse(sex6 >=1, 1, 0),
HIV_pos_partner = ifelse(sex7 >=1, 1, 0),
unknown_HIV = ifelse(sex9 >= 1, 1, 0),
HIV_neg_partner = ifelse(sex11 >=1, 1, 0)
)
puma_all <- puma_all %>% mutate(condomless_sex = ifelse(sex2 == sex3, 0, 1))
puma_all <- puma_all %>% relocate(condomless_sex, .after = sex3)
# re-code variables
puma_all <- puma_all %>% mutate(emp_coded = case_when(emp == 1 ~ "Laborer/semi-skilled",
emp == 2 ~ "Trade/sales",
emp == 3 ~ "Student",
emp == 4 ~ "Professional",
emp == 5 ~ "Farming/animal raising",
emp == 6 ~ "Housewife",
emp == 99 ~ "Multiple/Other"),
incsource_coded = case_when(incsource == 1 ~ "My work",
incsource == 2 ~ "My husband's work",
incsource == 3 ~ "My family",
incsource == 9 ~ "Other"),
ppoz_coded = case_when(ppoz == 0 ~ "No",
ppoz == 1 ~ "Yes",
ppoz == 2 ~ "Don't know"),
travel_coded = case_when(travel == 1 ~ "Less than 30 minutes",
travel == 2 ~ "30-59 minutes",
travel == 3 ~ "1-2 hours",
travel == 4 ~ "More than 2 hours"))
table(puma_all$group, useNA = "ifany")
#checking class of arm variable
class(puma_all$group)
#name values for group 1=POC Urine Assay, 2=SOC
#val_labels extracts variable labels from labelled vectors
val_labels(puma_all$group) <- c("Intervention" = 1, "Standard of Care" = 2)
val_labels(puma_all$group)
#use label for final table
puma_all$group <- to_character(puma_all$group)
puma_all$group_new <- case_when(puma_all$group == "Standard of Care" ~ 1,
puma_all$group == "Intervention" ~ 2)
puma_all <- puma_all %>% relocate(group_new, .after = group)
#val_labels extracts variable labels from labelled vectors
val_labels(puma_all$group_new) <- c("Intervention" = 2, "Standard of Care" = 1)
val_labels(puma_all$group_new)
#use label for final table
puma_all$group_new <- to_character(puma_all$group_new)
puma_all$group_new <- factor(puma_all$group_new, levels = c("Standard of Care", "Intervention"))
puma_all$group_new <- as.factor(puma_all$group_new)
## Coding Variables for Wilson Adherence Score
val_labels(puma_all$padh7) <- c("Very poor" = 0, "Poor" = 1, "Fair" = 2, "Good" = 3, "Very good" = 4, "Excellent" = 5)
val_labels(puma_all$padh7)
puma_all$padh7 <- to_character(puma_all$padh7)
puma_all <- puma_all %>% mutate(padh7_recode = case_when(padh7 == "Very poor" ~ 0,
padh7 == "Poor" ~.2,
padh7 == "Fair" ~ .4,
padh7 == "Good" ~ .6,
padh7 == "Very good" ~ .8,
padh7 == "Excellent" ~ 1))
puma_all <- puma_all %>% relocate(padh7_recode, .after = padh7)
puma_all <- puma_all %>% mutate(padh4 = ifelse(padh3 == 1, 0, padh4))
puma_all <- puma_all %>% mutate(padh4_recode = (30-padh4)/30)
puma_all <- puma_all %>% relocate(padh4_recode, .after = padh4)
puma_all <- puma_all %>% mutate(avg_padh = ((padh4_recode + padh7_recode)/2)*100)
puma_all <- puma_all %>% relocate(avg_padh, .after = wilson_adh)
## Scaling Wilson Adherence Score
puma_all <- puma_all %>% mutate(wilson_adh_scaled_sd = wilson_adh/sd(wilson_adh,
na.rm = TRUE))
puma_all <- puma_all %>% relocate(wilson_adh_scaled_sd, .after = wilson_adh)
## Coded version of visits for visualizations
puma_all$visit_coded <- factor(puma_all$visit, levels = c(1, 2, 3, 4, 5),
labels = c("Baseline", "Month3", "Month6",
"Month9", "Month12"))
puma_all$ptid  <- as.character(puma_all$ptid)
### Recode Hair Data with STRAND doses
# 3 levels
# duplicate hair3code
puma_all$hair3numeric <- puma_all$hair3code
table(puma_all$hair3code)
puma_all$hair3code <- factor(puma_all$hair3code, levels = c(1, 2, 3),
labels = c("<2", "2 to 3", ">=4"))
table(puma_all$hair3code)
# 4 levels
table(puma_all$hair4code, useNA = "ifany")
puma_all$hair4code <- factor(puma_all$hair4code, levels = c(1, 2, 3, 4),
labels = c("<2", "2 to 3", "4-6", "Daily"))
table(puma_all$hair4code, useNA = "ifany")
# 3 with BLQ separated out
table(puma_all$hair4blq, useNA = "ifany")
puma_all$hair4blq <- factor(puma_all$hair4blq, levels = c(0, 1, 2, 3),
labels = c("BLQ", "<2", "2 to 3", ">=4"))
table(puma_all$hair4blq, useNA = "ifany")
# 4 with BLQ separated out
table(puma_all$hair5blq, useNA = "ifany")
puma_all$hair5blq <- factor(puma_all$hair5blq, levels = c(0, 1, 2, 3, 4),
labels = c("BLQ", "<2", "2 to 3", "4-6", "Daily"))
table(puma_all$hair5blq, useNA = "ifany")
## Low vs High Hair Variable
puma_all <- puma_all %>% mutate(hair2code = case_when(hair3code == "<2" ~ "<=3",
hair3code == "2 to 3" ~ "<=3",
hair3code == ">=4" ~">=4"),
hair2_coded = ifelse(hair2code == ">=4", 1, 0)) %>%
relocate(c(hair2code, hair2_coded), .after = hair3code)
## Create a categorical Wilson Adherence Score for Alluvial Plots
puma_all <- puma_all %>% mutate(wilson_cat = case_when(wilson_adh >= 0 & wilson_adh <= 20 ~ "0-20",
wilson_adh >= 21 & wilson_adh <= 40 ~ "21-40",
wilson_adh >= 41 & wilson_adh <= 60 ~ "41-60",
wilson_adh >= 61 & wilson_adh <= 80 ~ "61-80",
wilson_adh >= 81 & wilson_adh <= 100 ~ "81-100"))
puma_all <- puma_all %>% relocate(wilson_cat, .after = wilson_adh)
#csv
write.csv(puma_all, file.path(pathway, "/Code/CSVs/PUMA_Long_Clean.csv"))
#RDS
saveRDS(puma_all, file = file.path(pathway, "/Code/RDS/puma_long_clean.rds"))
## Smaller month 12 dataframe
month12 <- puma_all %>% filter(visit == 5)
#csv
write.csv(month12, file.path(pathway, "/Code/CSVs/PUMA_month12.csv"))
#RDS
saveRDS(month12, file = file.path(pathway, "/Code/RDS/puma_month12.rds"))
# Limit to baseline data
baseline <- puma_all %>% filter(visit == 1)
#csv
write.csv(baseline, file.path(pathway, "/Code/CSVs/PUMA_baseline.csv"))
#RDS
saveRDS(baseline, file = file.path(pathway, "/Code/RDS/puma_baseline.rds"))
# POC
poc_all <- puma_all %>% filter(group == "Intervention")
# EXPORT
##csv
write.csv(poc_all, file.path(pathway, "/Code/CSVs/PUMA_poc_all.csv"))
##RDS
saveRDS(poc_all, file = file.path(pathway, "/Code/RDS/puma_poc_all.rds"))
# SOC
soc_all <- puma_all %>% filter(group == "Standard of Care")
# EXPORT
##csv
write.csv(soc_all, file.path(pathway, "/Code/CSVs/PUMA_soc_all.csv"))
##RDS
saveRDS(soc_all, file = file.path(pathway, "/Code/RDS/puma_soc_all.rds"))
ut_long <- puma_all %>% select(group_new, ut_result, visit, ptid)
ut_long <- as.data.frame(ut_long)
# EXPORT
##csv
write.csv(ut_long, file.path(pathway, "/Code/CSVs/PUMA_urine_long.csv"))
##RDS
saveRDS(ut_long, file = file.path(pathway, "/Code/RDS/puma_urine_long.rds"))
ut_wide <- reshape(ut_long, v.names = "ut_result", idvar = c("ptid", "group_new"),
timevar = "visit", direction = "wide")
# EXPORT
##csv
write.csv(ut_wide, file.path(pathway, "/Code/CSVs/PUMA_urine_wide.csv"))
##RDS
saveRDS(ut_wide, file = file.path(pathway, "/Code/RDS/puma_urine_wide.rds"))
# Hair
hair_long <- puma_all %>% select(group, detect_tfv, hair2_coded, hair2code, visit, ptid)
View(hair_long)
hair_wide <- reshape(hair_long, v.names = c("detect_tfv", "hair2_coded", "hair2code"), idvar = c("ptid", "group"),
timevar = "visit", direction = "wide")
View(hair_wide)
hair_long <- as.data.frame(hair_long)
hair_wide <- reshape(hair_long, v.names = c("detect_tfv", "hair2_coded", "hair2code"), idvar = c("ptid", "group"),
timevar = "visit", direction = "wide")
# EXPORT
##csv
write.csv(hair_wide, file.path(pathway, "/Code/CSVs/PUMA_hair_wide.csv"))
##RDS
saveRDS(hair_wide, file = file.path(pathway, "/Code/RDS/puma_hair_wide.rds"))
knitr::opts_chunk$set(echo = TRUE)
#load packages
library(dplyr)
library(flextable)
library(ggplot2)
library(collapse)
library(labelled)
library(compareGroups)
library(gee)
library(geepack)
library(pROC)
library(ROCR)
library(plotROC)
library(gridExtra)
library(kableExtra)
library(ggalluvial)
# Load utility functions
source("descriptive_utils.R")
pathway <- "~/Library/CloudStorage/Box-Box/Puma Analysis/Analysis/Code"
month12 <- readRDS(file.path(pathway, "/RDS/puma_month12.rds"))
puma_all <- readRDS(file.path(pathway, "/RDS/puma_long_clean.rds"))
primary_wide <- readRDS(file.path(pathway, "/RDS/puma_primary_wide.rds"))
hair_wide <- readRDS(file.path(pathway, "/RDS/puma_hair_wide.rds"))
ut_wide <- readRDS(file.path(pathway, "/RDS/puma_urine_wide.rds"))
adherence_wide <- readRDS(file.path(pathway, "/RDS/puma_adherence_wide.rds"))
ut_long <- readRDS(file.path(pathway, "/RDS/puma_urine_long.rds"))
output_path <- "~/Library/CloudStorage/Box-Box/Puma Analysis/Analysis/Code/Output"
# Re-code variables for ease of creating Table 1
puma_all$group_new <- factor(puma_all$group_new, levels = c("Standard of Care", "Intervention"))
ut_long$group_new <- factor(ut_long$group_new, levels = c("Standard of Care", "Intervention"))
# create a list of binary variables to code as yes/no from 1/0
table1_data <- puma_all %>% filter(visit == 1)
bin_variables <- c("marital", "sex8", "sex10", "sex12", "sex14", "par5___1", "par5___2",
"par5___3", "par5___4", "par5___5", "par5___6", "par5___7",
"par5___8", "par5___9", "padh3", "padh9___1", "padh9___2",
"padh9___3", "padh9___4", "padh9___5", "padh9___6", "padh9___7",
"padh9___8", "padh9___9", "padh9___10", "padh9___11", "padh9___12",
"padh9___13", "padh9___14", "padh9___15", "padh9____9", "padh10",
"mh14", "mh16", "mh17", "ut_result", "detect_tfv", "condomless_sex",
"new_partner", "HIV_pos_partner","unknown_HIV", "HIV_neg_partner",
"bc_any")
for (var in bin_variables){
table1_data[[var]] <- ifelse(table1_data[[var]] == 1, "Yes", "No")
}
table1_data <- table1_data %>% select("age", "edu", "income", "sex1", "prep_length",
"padh3", "padh6", "emp_coded",
"ppoz_coded", "marital", "mh14", "bc_any",
"travel_coded","incsource_coded", "sex5",
"sex2", "condomless_sex", "new_partner",
"HIV_pos_partner", "unknown_HIV",
"HIV_neg_partner", "sex14","group")
table1_arms <- compareGroups(group~ ., data = table1_data,na.omit(TRUE))
export_table1_arms <- createTable(table1_arms, show.p.overall=FALSE)
export_table1_arms
export2word(export_table1_arms, file = file.path(output_path, "/Tables/Table 1 by Arm.docx"))
table1_all <- compareGroups(~ ., data = table1_data,na.omit(TRUE))
export_table1_all <- createTable(table1_all, show.p.overall=FALSE)
export_table1_all
export2word(export_table1_all, file = file.path(output_path, "/Tables/Table 1 Total.docx"))
hair_detection_results <- summarize_across_visits(
data = hair_wide,
var_prefix = "detect_tfv",
visits = 1:5,
group_var = "group",
stat_func = function(x, na.rm=TRUE) sum(x, na.rm=na.rm)/sum(!is.na(x))
)
# Add counts of positive results for hair
hair_positive_counts <- summarize_across_visits(
data = hair_wide,
var_prefix = "detect_tfv",
visits = 1:5,
group_var = "group",
stat_func = function(x, na.rm=TRUE) sum(x, na.rm=na.rm)
)
# Also get missing counts
missing_hair <- summarize_across_visits(
data = hair_wide,
var_prefix = "detect_tfv",
visits = 1:5,
stat_func = function(x, na.rm=TRUE) sum(is.na(x))
)
# Create subsets by study arm
hair_poc <- hair_wide %>% filter(group == "Intervention")
hair_soc <- hair_wide %>% filter(group == "Standard of Care")
# Run chi-squared tests for all visits using a loop
chi_results_hair <- data.frame(
Visit = 1:5,
ChiSq = numeric(5),
P_value = numeric(5),
Overall_p = numeric(5)
)
for (i in 1:5) {
var_name <- paste0("detect_tfv.", i)
# Between-group test
test_result <- run_chi_square(hair_wide, "group", var_name)
chi_results_hair$ChiSq[i] <- test_result$statistic
chi_results_hair$P_value[i] <- test_result$p.value
# Overall test
overall_test <- run_chi_square(hair_wide, var_name)
chi_results_hair$Overall_p[i] <- overall_test$p.value
}
print(chi_results_hair)
# Categorical analysis over study period
# Analyze all categorical hair variables
hair_categorical_results <- analyze_categorical_across_visits(
data = puma_all,
var_names = c("hair3code", "hair4blq", "hair2code"),
visits = 1:5,
group_var = "group_new"
)
chi_results_hair_cat <- data.frame(
Visit = 1:5,
ChiSq = numeric(5),
P_value = numeric(5),
Overall_p = numeric(5)
)
for (i in 1:5) {
var_name <- paste0("hair2_coded", i)
# Between-group test
test_result <- run_chi_square(hair_wide, "group", var_name)
chi_results_hair_cat$ChiSq[i] <- test_result$statistic
chi_results_hair_cat$P_value[i] <- test_result$p.value
# Overall test
overall_test <- run_chi_square(hair_wide, var_name)
chi_results_hair_cat$Overall_p[i] <- overall_test$p.value
}
hair_wide[["hair2_coded.1"]]
hair_wide[["detect_tfv.1"]]
hair_wide[["group"]]
chi_results_hair_cat <- data.frame(
Visit = 1:5,
ChiSq = numeric(5),
P_value = numeric(5),
Overall_p = numeric(5)
)
for (i in 1:5) {
var_name <- paste0("hair2_coded.", i)
# Between-group test
test_result <- run_chi_square(hair_wide, "group", var_name)
chi_results_hair_cat$ChiSq[i] <- test_result$statistic
chi_results_hair_cat$P_value[i] <- test_result$p.value
# Overall test
overall_test <- run_chi_square(hair_wide, var_name)
chi_results_hair_cat$Overall_p[i] <- overall_test$p.value
}
print(chi_results_hair_cat)
print(chi_results_hair)
chisq.test(hair_wide$group, hair_wide$detect_tfv.3)
chisq.test(hair_wide$group, hair_wide$detect_tfv.5)
print(chi_results_hair_cat)
chisq.test(hair_wide$group, hair_wide$hair2code.2)
chisq.test(hair_wide$group, hair_wide$hair2_coded.2)
chisq.test(hair_wide$group, hair_wide$hair2_coded.3)
chisq.test(hair_wide$group, hair_wide$hair2code.3)
